{"version":3,"sources":["EmotionTable.js","App.js","reportWebVitals.js","index.js"],"names":["EmotionTableRow","props","emotion","emotions","result","keywords","sadness","joy","fear","disgust","anger","EmotionTable","this","console","log","className","React","Component","App","state","innercomp","rows","cols","id","mode","sentimentOutput","sentiment","renderTextArea","document","getElementById","value","setState","renderTextBox","sendForSentimentAnalysis","url","fetch","then","response","json","data","label","output","style","color","fontSize","sendForEmotionAnalysis","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1bdcd2cf.chunk.js","sourcesContent":["import React from 'react';\r\nimport './bootstrap.min.css';\r\n\r\n\r\nfunction EmotionTableRow(props) {\r\n   let emotion = props.emotions.result.keywords[0].emotion;\r\n    return (\r\n      <tbody>\r\n        <tr key={1}><td>Sadness</td><td>{emotion.sadness}</td></tr>\r\n        <tr key={2}><td>Joy</td><td>{emotion.joy}</td></tr>\r\n        <tr key={3}><td>Fear</td><td>{emotion.fear}</td></tr>\r\n        <tr key={4}><td>Disgust</td><td>{emotion.disgust}</td></tr>\r\n        <tr key={5}><td>Anger</td><td>{emotion.anger}</td></tr>\r\n      </tbody>\r\n    );\r\n}\r\n\r\nclass EmotionTable extends React.Component {\r\n  render() {\r\n    let emotions = this.props.emotions;\r\n    console.log(emotions);\r\n    console.log(emotions.result.keywords[0].emotion.sadness);\r\n    return (\r\n      <div>\r\n        <table className=\"table table-bordered\">\r\n          <tbody>\r\n                <EmotionTableRow emotions={emotions} />\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\nexport default EmotionTable;"," import './bootstrap.min.css';\r\nimport './App.css';\r\nimport EmotionTable from './EmotionTable.js';\r\nimport React from 'react';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n          innercomp:<textarea rows=\"4\" cols=\"50\" id=\"textinput\"/>,\r\n          mode: \"text\",\r\n          sentimentOutput:[],\r\n          sentiment:true\r\n        }\r\n  \r\n  renderTextArea = ()=>{\r\n    document.getElementById(\"textinput\").value = \"\";\r\n    if(this.state.mode === \"url\") {\r\n      this.setState({\r\n      innercomp:<textarea rows=\"4\" cols=\"50\" id=\"textinput\"/>,\r\n      mode: \"text\",\r\n      sentimentOutput:[],\r\n      sentiment:true\r\n    })\r\n    } \r\n  }\r\n\r\n  renderTextBox = ()=>{\r\n    document.getElementById(\"textinput\").value = \"\";\r\n    if(this.state.mode === \"text\") {\r\n      this.setState({\r\n      innercomp:<textarea rows=\"1\" cols=\"50\" id=\"textinput\"/>,\r\n      mode: \"url\",\r\n      sentimentOutput:[],\r\n      sentiment:true\r\n    })\r\n    }\r\n  }\r\n\r\n  sendForSentimentAnalysis = () => {\r\n    this.setState({sentiment:true});\r\n    let url = \".\";\r\n\r\n    if(this.state.mode === \"url\") {\r\n      url = url+\"/url/sentiment?url=\"+document.getElementById(\"textinput\").value;\r\n    } else {\r\n      url = url+\"/text/sentiment?text=\"+document.getElementById(\"textinput\").value;\r\n    }\r\n    fetch(url).then((response)=>{\r\n        response.json().then((data)=>{\r\n        this.setState({sentimentOutput:data.result.keywords[0].sentiment.label});\r\n        let output = \"Waiting for result.....\";\r\n        let label = data.result.keywords[0].sentiment.label;\r\n        console.log(data);\r\n        console.log(label);\r\n        if(label === \"positive\") {\r\n          output = <div style={{color:\"green\",fontSize:20}}>{data.result.keywords[0].sentiment.label}</div>\r\n        } else if (label === \"negative\"){\r\n          output = <div style={{color:\"red\",fontSize:20}}>{data.result.keywords[0].sentiment.label}</div>\r\n        } else {\r\n          output = <div style={{color:\"orange\",fontSize:20}}>{data.result.keywords[0].sentiment.label}</div>\r\n        }\r\n        this.setState({sentimentOutput:output});\r\n      })});\r\n  }\r\n\r\n  sendForEmotionAnalysis = () => {\r\n\r\n    this.setState({sentiment:false});\r\n    let url = \".\";\r\n    if(this.state.mode === \"url\") {\r\n      url = url+\"/url/emotion?url=\"+document.getElementById(\"textinput\").value;\r\n    } else {\r\n      url = url+\"/text/emotion/?text=\"+document.getElementById(\"textinput\").value;\r\n    }\r\n    fetch(url).then((response)=>{\r\n      response.json().then((data)=>{\r\n      this.setState({sentimentOutput:<EmotionTable emotions={data}/>});\r\n  })})  ;\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (  \r\n      <div className=\"App\">\r\n      <button className=\"btn btn-info\" onClick={this.renderTextArea}>Text</button>\r\n        <button className=\"btn btn-dark\"  onClick={this.renderTextBox}>URL</button>\r\n        <br/><br/>\r\n        {this.state.innercomp}\r\n        <br/>\r\n        <button className=\"btn-primary\" onClick={this.sendForSentimentAnalysis}>Analyze Sentiment</button>\r\n        <button className=\"btn-primary\" onClick={this.sendForEmotionAnalysis}>Analyze Emotion</button>\r\n        <br/>\r\n            {this.state.sentimentOutput}\r\n      </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}